# Save the output of this file and use kubectl create -f to import
# it into Kubernetes.
#
# Created with podman-5.4.0
apiVersion: v1
kind: Pod
metadata:
  annotations:
    io.kubernetes.cri-o.SandboxID/ollama: 709c170721a3ac4a01003a33fc21ee8c1c2f775ffe1eba2633a7091910ae3dda
    io.kubernetes.cri-o.SandboxID/openwebui: 709c170721a3ac4a01003a33fc21ee8c1c2f775ffe1eba2633a7091910ae3dda
  creationTimestamp: "2025-02-25T20:16:07Z"
  labels:
    app: ollama
  name: ollama
spec:
  containers:
  - args:
    - serve
    image: docker.io/ollama/ollama:rocm
    name: ollama
    securityContext:
      privileged: false
      capabilities:
        add: ["SYS_ADMIN"]
    ports:
    - containerPort: 8080
      hostPort: 8080
    - containerPort: 11434
      hostPort: 11434
    volumeMounts:
    - mountPath: /root/.ollama
      name: ollama-pvc
    - mountPath: /dev/kfd
      name: kfd-device
    - mountPath: /dev/dri
      name: dri-device
    env:
      - name: GPU_VISIBLE_DEVICES
        value: "all"  # Expose all GPUs, or specify a GPU index if needed
  - image: ghcr.io/open-webui/open-webui:main
    name: openwebui
    securityContext: {}
    volumeMounts:
    - mountPath: /app/backend/data
      name: open-webui-pvc
  volumes:
  - name: ollama-pvc
    persistentVolumeClaim:
      claimName: ollama
  - name: open-webui-pvc
    persistentVolumeClaim:
      claimName: open-webui
  - name: kfd-device
    hostPath:
      path: /dev/kfd
      type: CharDevice
  - name: dri-device
    hostPath:
      path: /dev/dri
      type: Directory

